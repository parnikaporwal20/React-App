[{"C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\index.js":"1","C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\App.js":"2","C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\reducers\\index.js":"3","C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\components\\HomeComponent.js":"4","C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\reducers\\providerReducer.js":"5","C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\reducers\\serviceReducer.js":"6","C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\components\\ProviderComponent.js":"7","C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\actions\\serviceAction.js":"8","C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\actions\\providerAction.js":"9"},{"size":568,"mtime":1594442812000,"results":"10","hashOfConfig":"11"},{"size":341,"mtime":1594442812000,"results":"12","hashOfConfig":"11"},{"size":268,"mtime":1594442812000,"results":"13","hashOfConfig":"11"},{"size":4517,"mtime":1594442812000,"results":"14","hashOfConfig":"11"},{"size":345,"mtime":1594442812000,"results":"15","hashOfConfig":"11"},{"size":340,"mtime":1594442812000,"results":"16","hashOfConfig":"11"},{"size":1219,"mtime":1594442812000,"results":"17","hashOfConfig":"11"},{"size":843,"mtime":1594442812000,"results":"18","hashOfConfig":"11"},{"size":931,"mtime":1594442812000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1jtm8yk",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\index.js",[],["40","41"],"C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\App.js",[],"C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\reducers\\index.js",[],"C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\components\\HomeComponent.js",["42"],"import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { fetchProviders } from '../actions/providerAction';\nimport { fetchServices } from '../actions/serviceAction';\nimport ProvideComponent from './ProviderComponent';\n\nclass HomeComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            servicesLoaded: false,\n            providersLoaded: false,\n            serviceProviders: []\n\n        }\n\n    }\n    componentDidMount() {\n        this.props.getServices().then(res => {\n            if (res) {\n\n                this.setState({\n                    servicesLoaded: true\n                });\n            }\n        })\n        this.props.getProviders().then(res => {\n            if (res) {\n                this.setState({\n                    providersLoaded: true\n                });\n            }\n        })\n    }\n    showProviders = (serviceName) => {\n        this.setState({\n            serviceName: serviceName\n        });\n        if (this.props.providers && this.props.providers.data &&\n            this.props.providers.data.length > 0 && this.props.providers.included &&\n            this.props.providers.included.length > 0) {\n            let providerIncludedList = this.props.providers.included.filter(include => include.attributes.service === serviceName);\n            let providers = this.props.providers.data.filter(t => t.relationships.schedules.data.filter(s => providerIncludedList.findIndex(p => p.id === s.id) > -1).length > 0);\n            this.setState({\n                serviceProviders: providers\n\n            });\n      \n        }\n    }\n    render() {\n\n        return (\n            <div style={{ padding: \"20px\" }}>\n                <div className=\"row\">\n                    <div className=\"col-md-4 \">\n                        <div className=\"panel panel-primary\">\n                            <div className=\"panel-heading\">Services</div>\n                            <div className=\"panel-body\">\n                                <div className=\"navbar navbar-default\">\n                                    <ul className=\"nav flex-column mb-0\">\n                                        {this.props.services && this.props.services.data && this.props.services.data.length > 0 ? Array.from(new Set(this.props.services.data.map(service => service.attributes.name))).map((service,index) => {\n                                            return <li className={`nav-item`} key={index}>\n                                                <a href=\"#\" className={`nav-link`} style={{ backgroundColor: service === this.state.serviceName ? \"#ccc\" : \"\" }} onClick={() => this.showProviders(service)}>\n                                                    {service}\n                                                </a>\n                                            </li>\n                                        }) : <></>}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-heading\">Providers</div>\n                            <div className=\"panel-body\">\n                                 <ProvideComponent serviceProviders={this.state.serviceProviders} serviceName={this.state.serviceName} >\n                                 </ProvideComponent>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    services: state.services.services,\n    providers: state.providers.providers\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getServices: () => {\n\n            return new Promise((resolve, reject) => {\n                dispatch(fetchServices()).then(response => {\n                    resolve(response)\n                }).catch(error => {\n                    reject(error);\n                })\n            })\n        },\n        getProviders: () => {\n            return new Promise((resolve, reject) => {\n                dispatch(fetchProviders()).then(response => {\n                    resolve(response)\n                }).catch(error => {\n                    reject(error);\n                })\n            })\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeComponent);","C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\reducers\\providerReducer.js",[],"C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\reducers\\serviceReducer.js",[],"C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\components\\ProviderComponent.js",[],"C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\actions\\serviceAction.js",[],"C:\\Users\\Parnika Gupta\\ReactAssignment-master\\src\\actions\\providerAction.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":65,"column":49,"nodeType":"49","endLine":65,"endColumn":206},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]