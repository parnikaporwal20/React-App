{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Parnika Gupta\\\\ReactAssignment-master\\\\src\\\\components\\\\HomeComponent.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { fetchProviders } from '../actions/providerAction';\nimport { fetchServices } from '../actions/serviceAction';\nimport ProvideComponent from './ProviderComponent';\n\nclass HomeComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showProviders = serviceName => {\n      this.setState({\n        serviceName: serviceName\n      });\n\n      if (this.props.providers && this.props.providers.data && this.props.providers.data.length > 0 && this.props.providers.included && this.props.providers.included.length > 0) {\n        let providerIncludedList = this.props.providers.included.filter(include => include.attributes.service === serviceName);\n        let providers = this.props.providers.data.filter(t => t.relationships.schedules.data.filter(s => providerIncludedList.findIndex(p => p.id === s.id) > -1).length > 0);\n        this.setState({\n          serviceProviders: providers\n        });\n      }\n    };\n\n    this.state = {\n      servicesLoaded: false,\n      providersLoaded: false,\n      serviceProviders: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.getServices().then(res => {\n      if (res) {\n        this.setState({\n          servicesLoaded: true\n        });\n      }\n    });\n    this.props.getProviders().then(res => {\n      if (res) {\n        this.setState({\n          providersLoaded: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel panel-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, \"Services\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar navbar-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"nav flex-column mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }, this.props.services && this.props.services.data && this.props.services.data.length > 0 ? Array.from(new Set(this.props.services.data.map(service => service.attributes.name))).map((service, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: `nav-item`,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 52\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        className: `nav-link`,\n        style: {\n          backgroundColor: service === this.state.serviceName ? \"#ccc\" : \"\"\n        },\n        onClick: () => this.showProviders(service),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 49\n        }\n      }, service));\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, \"Providers\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ProvideComponent, {\n      serviceProviders: this.state.serviceProviders,\n      serviceName: this.state.serviceName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 34\n      }\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  services: state.services.services,\n  providers: state.providers.providers\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getServices: () => {\n      return new Promise((resolve, reject) => {\n        dispatch(fetchServices()).then(response => {\n          resolve(response);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    getProviders: () => {\n      return new Promise((resolve, reject) => {\n        dispatch(fetchProviders()).then(response => {\n          resolve(response);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeComponent);","map":{"version":3,"sources":["C:/Users/Parnika Gupta/ReactAssignment-master/src/components/HomeComponent.js"],"names":["React","Component","connect","fetchProviders","fetchServices","ProvideComponent","HomeComponent","constructor","props","showProviders","serviceName","setState","providers","data","length","included","providerIncludedList","filter","include","attributes","service","t","relationships","schedules","s","findIndex","p","id","serviceProviders","state","servicesLoaded","providersLoaded","componentDidMount","getServices","then","res","getProviders","render","padding","services","Array","from","Set","map","name","index","backgroundColor","mapStateToProps","mapDispatchToProps","dispatch","Promise","resolve","reject","response","catch","error"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { fetchProviders } from '../actions/providerAction';\nimport { fetchServices } from '../actions/serviceAction';\nimport ProvideComponent from './ProviderComponent';\n\nclass HomeComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            servicesLoaded: false,\n            providersLoaded: false,\n            serviceProviders: []\n\n        }\n\n    }\n    componentDidMount() {\n        this.props.getServices().then(res => {\n            if (res) {\n\n                this.setState({\n                    servicesLoaded: true\n                });\n            }\n        })\n        this.props.getProviders().then(res => {\n            if (res) {\n                this.setState({\n                    providersLoaded: true\n                });\n            }\n        })\n    }\n    showProviders = (serviceName) => {\n        this.setState({\n            serviceName: serviceName\n        });\n        if (this.props.providers && this.props.providers.data &&\n            this.props.providers.data.length > 0 && this.props.providers.included &&\n            this.props.providers.included.length > 0) {\n            let providerIncludedList = this.props.providers.included.filter(include => include.attributes.service === serviceName);\n            let providers = this.props.providers.data.filter(t => t.relationships.schedules.data.filter(s => providerIncludedList.findIndex(p => p.id === s.id) > -1).length > 0);\n            this.setState({\n                serviceProviders: providers\n\n            });\n      \n        }\n    }\n    render() {\n\n        return (\n            <div style={{ padding: \"20px\" }}>\n                <div className=\"row\">\n                    <div className=\"col-md-4 \">\n                        <div className=\"panel panel-primary\">\n                            <div className=\"panel-heading\">Services</div>\n                            <div className=\"panel-body\">\n                                <div className=\"navbar navbar-default\">\n                                    <ul className=\"nav flex-column mb-0\">\n                                        {this.props.services && this.props.services.data && this.props.services.data.length > 0 ? Array.from(new Set(this.props.services.data.map(service => service.attributes.name))).map((service,index) => {\n                                            return <li className={`nav-item`} key={index}>\n                                                <a href=\"#\" className={`nav-link`} style={{ backgroundColor: service === this.state.serviceName ? \"#ccc\" : \"\" }} onClick={() => this.showProviders(service)}>\n                                                    {service}\n                                                </a>\n                                            </li>\n                                        }) : <></>}\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-heading\">Providers</div>\n                            <div className=\"panel-body\">\n                                 <ProvideComponent serviceProviders={this.state.serviceProviders} serviceName={this.state.serviceName} >\n                                 </ProvideComponent>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    services: state.services.services,\n    providers: state.providers.providers\n})\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getServices: () => {\n\n            return new Promise((resolve, reject) => {\n                dispatch(fetchServices()).then(response => {\n                    resolve(response)\n                }).catch(error => {\n                    reject(error);\n                })\n            })\n        },\n        getProviders: () => {\n            return new Promise((resolve, reject) => {\n                dispatch(fetchProviders()).then(response => {\n                    resolve(response)\n                }).catch(error => {\n                    reject(error);\n                })\n            })\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeComponent);"]},"metadata":{},"sourceType":"module"}